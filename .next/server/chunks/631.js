"use strict";exports.id=631,exports.ids=[631],exports.modules={8650:(e,r,t)=>{t.d(r,{NI:()=>F,Wi:()=>FormField,l0:()=>m,lX:()=>f,xJ:()=>c,zG:()=>p});var s=t(80),a=t(9885),i=t(1085),o=t(6558),d=t(1712),l=t(3385);let m=o.RV,n=a.createContext({}),FormField=({...e})=>s.jsx(n.Provider,{value:{name:e.name},children:s.jsx(o.Qr,{...e})}),useFormField=()=>{let e=a.useContext(n),r=a.useContext(u),{getFieldState:t,formState:s}=(0,o.Gc)(),i=t(e.name,s);if(!e)throw Error("useFormField should be used within <FormField>");let{id:d}=r;return{id:d,name:e.name,formItemId:`${d}-form-item`,formDescriptionId:`${d}-form-item-description`,formMessageId:`${d}-form-item-message`,...i}},u=a.createContext({}),c=a.forwardRef(({className:e,...r},t)=>{let i=a.useId();return s.jsx(u.Provider,{value:{id:i},children:s.jsx("div",{ref:t,className:(0,d.cn)("space-y-2",e),...r})})});c.displayName="FormItem";let f=a.forwardRef(({className:e,...r},t)=>{let{error:a,formItemId:i}=useFormField();return s.jsx(l._,{ref:t,className:(0,d.cn)(a&&"text-destructive",e),htmlFor:i,...r})});f.displayName="FormLabel";let F=a.forwardRef(({...e},r)=>{let{error:t,formItemId:a,formDescriptionId:o,formMessageId:d}=useFormField();return s.jsx(i.g7,{ref:r,id:a,"aria-describedby":t?`${o} ${d}`:`${o}`,"aria-invalid":!!t,...e})});F.displayName="FormControl";let x=a.forwardRef(({className:e,...r},t)=>{let{formDescriptionId:a}=useFormField();return s.jsx("p",{ref:t,id:a,className:(0,d.cn)("text-sm text-muted-foreground",e),...r})});x.displayName="FormDescription";let p=a.forwardRef(({className:e,children:r,...t},a)=>{let{error:i,formMessageId:o}=useFormField(),l=i?String(i?.message):r;return l?s.jsx("p",{ref:a,id:o,className:(0,d.cn)("text-sm font-medium text-destructive",e),...t,children:l}):null});p.displayName="FormMessage"},6136:(e,r,t)=>{t.d(r,{Hi:()=>PostRegisterUser,am:()=>PostLoginUser,p$:()=>UpdateRegisteredUser});var s=t(1973);let PostRegisterUser=async(e,{arg:r})=>await s.Z.collection("users").create(r.data),UpdateRegisteredUser=async(e,{arg:r})=>await s.Z.collection("users").update(r.userId,r.data),PostLoginUser=async(e,{arg:r})=>await s.Z.collection("users").authWithPassword(r.email,r.password)}};